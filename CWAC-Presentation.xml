<?xml version="1.0" encoding="UTF-8"?>
<root>
    <doclet-version-NOT-library-version>1.04</doclet-version-NOT-library-version>
    <class>
        <name>uk.co.martinpearman.android.util.DisplayMetrics</name>
        <shortname>DisplayMetrics</shortname>
        <objectwrapper>android.util.DisplayMetrics</objectwrapper>
        <owner>process</owner>
        <method>
            <name>SetToDefaults</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>SetTo</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>DisplayMetrics1</name>
                <type>android.util.DisplayMetrics</type>
            </parameter>
        </method>
        <method>
            <name>Initialize</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <property>
            <name>DensityDpi</name>
            <returntype>int</returntype>
            <comment>The screen density expressed as dots-per-inch.</comment>
        </property>
        <property>
            <name>ScaledDensity</name>
            <returntype>float</returntype>
            <comment>A scaling factor for fonts displayed on the display.</comment>
        </property>
        <property>
            <name>WidthPixels</name>
            <returntype>int</returntype>
            <comment>The absolute width of the display in pixels.</comment>
        </property>
        <property>
            <name>Xdpi</name>
            <returntype>float</returntype>
            <comment>The exact physical pixels per inch of the screen in the X dimension.</comment>
        </property>
        <property>
            <name>Density</name>
            <returntype>float</returntype>
            <comment>The logical density of the display.</comment>
        </property>
        <property>
            <name>HeightPixels</name>
            <returntype>int</returntype>
            <comment>The absolute height of the display in pixels.</comment>
        </property>
        <property>
            <name>Ydpi</name>
            <returntype>float</returntype>
            <comment>The exact physical pixels per inch of the screen in the Y dimension.</comment>
        </property>
        <field>
            <name>DENSITY_DEFAULT</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>DENSITY_XHIGH</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>DENSITY_HIGH</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>DENSITY_TV</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>DENSITY_XXHIGH</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>DENSITY_LOW</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>DENSITY_MEDIUM</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
    </class>
    <class>
        <name>uk.co.martinpearman.b4a.hardware.display.DisplayManager.DisplayManager</name>
        <shortname>DisplayManager</shortname>
        <objectwrapper>android.hardware.display.DisplayManager</objectwrapper>
        <owner>process</owner>
        <method>
            <name>UnregisterDisplayListener</name>
            <comment>Unregisters a display listener.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>DisplayListener1</name>
                <type>android.hardware.display.DisplayManager.DisplayListener</type>
            </parameter>
        </method>
        <method>
            <name>GetDisplays2</name>
            <comment>Gets all currently valid logical displays of the specified category.</comment>
            <returntype>uk.co.martinpearman.b4a.view.Display[]</returntype>
            <parameter>
                <name>Category</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>RegisterDisplayListener</name>
            <comment>Registers a display listener to receive notifications about when displays are added, removed or changed.</comment>
            <returntype>uk.co.martinpearman.b4a.hardware.display.DisplayManager.DisplayManagerDisplayListener</returntype>
            <parameter>
                <name>pBA</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>EventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>GetDisplays</name>
            <comment>Gets all currently valid logical displays.</comment>
            <returntype>uk.co.martinpearman.b4a.view.Display[]</returntype>
        </method>
        <method>
            <name>GetDisplay</name>
            <comment>Gets information about a logical display.</comment>
            <returntype>uk.co.martinpearman.b4a.view.Display</returntype>
            <parameter>
                <name>DisplayId</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>Initialize</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>pBA</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
        </method>
    </class>
    <class>
        <name>uk.co.martinpearman.b4a.hardware.display.DisplayManager.DisplayManagerDisplayListener</name>
        <shortname>DisplayManagerDisplayListener</shortname>
        <objectwrapper>android.hardware.display.DisplayManager.DisplayListener</objectwrapper>
        <owner>process</owner>
        <event>DisplayAdded(DisplayId As Int)</event>
        <event>DisplayChanged(DisplayId As Int)</event>
        <event>DisplayRemoved(DisplayId As Int)</event>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
    </class>
    <class>
        <name>uk.co.martinpearman.b4a.externaldisplays.PresentationHelper</name>
        <shortname>PresentationHelper</shortname>
        <objectwrapper>com.commonsware.cwac.preso.PresentationHelper</objectwrapper>
        <owner>process</owner>
        <event>ClearPresentation(ShowInline As Boolean)</event>
        <event>ShowPresentation(Display1 As Display)</event>
        <method>
            <name>Pause</name>
            <comment>You should call Pause when your Activity is paused.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>Initialize</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>pBA</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>EventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>Resume</name>
            <comment>You could call Resume when your Activity is resumed.</comment>
            <returntype>void</returntype>
        </method>
        <property>
            <name>Enabled</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>Enabled</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
    </class>
    <class>
        <name>uk.co.martinpearman.b4a.externaldisplays.BasicPresentation</name>
        <shortname>BasicPresentation</shortname>
        <objectwrapper>uk.co.martinpearman.android.app.BasicPresentation</objectwrapper>
        <owner>activity</owner>
        <method>
            <name>GetDisplay</name>
            <comment>Gets the Display that this presentation appears on.</comment>
            <returntype>uk.co.martinpearman.b4a.view.Display</returntype>
        </method>
        <method>
            <name>GetResources</name>
            <comment>Gets the Resources that should be used to inflate the layout of this presentation.</comment>
            <returntype>uk.co.martinpearman.b4a.content.res.Resources</returntype>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>Initialize</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>pBA</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>Display1</name>
                <type>android.view.Display</type>
            </parameter>
        </method>
        <method>
            <name>Initialize2</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>pBA</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>Display1</name>
                <type>android.view.Display</type>
            </parameter>
            <parameter>
                <name>Theme</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>Dismiss</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>Show</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>GetPanel</name>
            <comment></comment>
            <returntype>anywheresoftware.b4a.objects.PanelWrapper</returntype>
        </method>
    </class>
    <class>
        <name>uk.co.martinpearman.android.graphics.Point</name>
        <shortname>Point</shortname>
        <objectwrapper>android.graphics.Point</objectwrapper>
        <owner>process</owner>
        <method>
            <name>Set</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>X</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Y</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>Initialize</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>X</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Y</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>Offset</name>
            <comment>Offset the point's coordinates by Dx, Dy.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Dx</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Dy</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>Equals</name>
            <comment>Returns true if the point's coordinates equal (X, Y).</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>X</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Y</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>Initialize3</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>Initialize2</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>Point1</name>
                <type>android.graphics.Point</type>
            </parameter>
        </method>
        <method>
            <name>Negate</name>
            <comment>Negate the point's coordinates.</comment>
            <returntype>void</returntype>
        </method>
        <property>
            <name>X</name>
            <returntype>int</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Y</name>
            <returntype>int</returntype>
            <comment></comment>
        </property>
    </class>
    <class>
        <name>uk.co.martinpearman.b4a.view.Display</name>
        <shortname>Display</shortname>
        <objectwrapper>android.view.Display</objectwrapper>
        <owner>process</owner>
        <method>
            <name>GetRectSize</name>
            <comment>Gets the size of the display as a rectangle, in pixels.</comment>
            <returntype>anywheresoftware.b4a.objects.drawable.CanvasWrapper.RectWrapper</returntype>
        </method>
        <method>
            <name>GetRealMetrics</name>
            <comment>Gets display metrics based on the real size of this display.</comment>
            <returntype>uk.co.martinpearman.android.util.DisplayMetrics</returntype>
        </method>
        <method>
            <name>GetRotation</name>
            <comment>Returns the rotation of the screen from its "natural" orientation.</comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>GetCurrentSizeRanges</name>
            <comment>Return the range of display sizes an application can expect to encounter under normal operation, as long as there is no physical change in screen size.
 Return value is an array of Point objects where element 0 is the smallest display size and element 1 is the largest display size.</comment>
            <returntype>uk.co.martinpearman.android.graphics.Point[]</returntype>
        </method>
        <method>
            <name>GetSize</name>
            <comment>Gets the size of the display, in pixels.</comment>
            <returntype>uk.co.martinpearman.android.graphics.Point</returntype>
        </method>
        <method>
            <name>GetRealSize</name>
            <comment>Gets the real size of the display without subtracting any window decor or applying any compatibility scale factors.</comment>
            <returntype>uk.co.martinpearman.android.graphics.Point</returntype>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>GetRefreshRate</name>
            <comment>Gets the refresh rate of this display in frames per second.</comment>
            <returntype>float</returntype>
        </method>
        <method>
            <name>GetFlags</name>
            <comment>Returns a combination of flags that describe the capabilities of the display.</comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>GetMetrics</name>
            <comment>Gets display metrics that describe the size and density of this display.</comment>
            <returntype>uk.co.martinpearman.android.util.DisplayMetrics</returntype>
        </method>
        <method>
            <name>GetName</name>
            <comment>Gets the name of the display.</comment>
            <returntype>java.lang.String</returntype>
        </method>
        <method>
            <name>GetDisplayId</name>
            <comment>Gets the display id.</comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>IsValid</name>
            <comment>Returns true if this display is still valid, false if the display has been removed.</comment>
            <returntype>boolean</returntype>
        </method>
        <field>
            <name>FLAG_SUPPORTS_PROTECTED_BUFFERS</name>
            <comment>Display flag: Indicates that the display supports compositing content that is stored in protected graphics buffers.</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>FLAG_SECURE</name>
            <comment>Display flag: Indicates that the display has a secure video output and supports compositing secure surfaces.</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>FLAG_PRIVATE</name>
            <comment>Display flag: Indicates that the display is private.</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>DEFAULT_DISPLAY</name>
            <comment>The default Display id, which is the id of the built-in primary display assuming there is one.</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>FLAG_PRESENTATION</name>
            <comment>Display flag: Indicates that the display is a presentation display.</comment>
            <returntype>int</returntype>
        </field>
    </class>
    <class>
        <name>uk.co.martinpearman.b4a.content.res.Resources</name>
        <shortname>Resources</shortname>
        <objectwrapper>android.content.res.Resources</objectwrapper>
        <owner>process</owner>
        <method>
            <name>GetIntArray</name>
            <comment>Return the int array associated with the resource ID.</comment>
            <returntype>int[]</returntype>
            <parameter>
                <name>ResourceId</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>GetResourceNames</name>
            <comment>Returns a List containing resource names.
 ResourceSource1 - Either RESOURCE_SOURCE_APPLICATION or RESOURCE_SOURCE_SYSTEM.
 ResourceType - The type of resources to return resource names for, eg "string" or "drawable".</comment>
            <returntype>anywheresoftware.b4a.objects.collections.List</returntype>
            <parameter>
                <name>ResourceSource1</name>
                <type EnumType="true">uk.co.martinpearman.b4a.content.res.Resources.ResourceSource</type>
            </parameter>
            <parameter>
                <name>ResourceType</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>Initialize</name>
            <comment>Initialize the Resources object.
 ResourceSource1 - Either RESOURCE_SOURCE_APPLICATION or RESOURCE_SOURCE_SYSTEM.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ResourceSource1</name>
                <type EnumType="true">uk.co.martinpearman.b4a.content.res.Resources.ResourceSource</type>
            </parameter>
        </method>
        <method>
            <name>GetResourceTypeName</name>
            <comment>Return the type name for the resource identifier.</comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>ResourceId</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>GetColor</name>
            <comment>Return a color integer associated with the resource ID.</comment>
            <returntype>int</returntype>
            <parameter>
                <name>ResourceId</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>GetResourceName</name>
            <comment>Return the full name for the resource identifier.</comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>ResourceId</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>GetIdentifier</name>
            <comment>Returns an integer resource identifier for the given resource name.
 A fully qualified resource name is of the form "package:type/entry". 
 The first two components (package and type) are optional if ResourceType and DefaultPackage, respectively, are specified here. 
 ResourceName - The name of the desired resource.
 ResourceType - Optional resource type to find, if "type/" is not included in the name.
 DefaultPackage - Optional default package to find, if "package:" is not included in the name.
 Returns 0 if no such resource was found. (0 is not a valid resource ID).</comment>
            <returntype>int</returntype>
            <parameter>
                <name>ResourceName</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>ResourceType</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>DefaultPackage</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>GetDimensionPixelSize</name>
            <comment>Retrieve a dimensional for the resource ID for use as a size in raw pixels.</comment>
            <returntype>int</returntype>
            <parameter>
                <name>ResourceId</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>GetStringArray</name>
            <comment>Return the string array associated with the resource ID.</comment>
            <returntype>java.lang.String[]</returntype>
            <parameter>
                <name>ResourceId</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>OpenRawResource</name>
            <comment>Open a data stream for reading a raw resource.</comment>
            <returntype>anywheresoftware.b4a.objects.streams.File.InputStreamWrapper</returntype>
            <parameter>
                <name>ResourceId</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>GetDimension</name>
            <comment>Retrieve a dimensional for the resource ID.</comment>
            <returntype>float</returntype>
            <parameter>
                <name>ResourceId</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>GetDimensionPixelOffset</name>
            <comment>Retrieve a dimensional for the resource ID for use as an offset in raw pixels.</comment>
            <returntype>int</returntype>
            <parameter>
                <name>ResourceId</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>GetBoolean</name>
            <comment>Return a boolean associated with the resource ID.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>ResourceId</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>GetResourceEntryName</name>
            <comment>Return the entry name for the resource identifier.</comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>ResourceId</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>GetDrawable</name>
            <comment>Return a drawable object associated with the resource ID.</comment>
            <returntype>android.graphics.drawable.Drawable</returntype>
            <parameter>
                <name>ResourceId</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>GetQuantityString</name>
            <comment>Returns the string necessary for grammatically correct pluralization of the resource ID for the quantity.</comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>ResourceId</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Quantity</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>GetResourcePackageName</name>
            <comment>Return the package name for the resource identifier.</comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>ResourceId</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>GetString</name>
            <comment>Return the string value associated with the resource ID.
 It will be stripped of any styled text information.</comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>ResourceId</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>GetInteger</name>
            <comment>Return an integer associated with the resource ID.</comment>
            <returntype>int</returntype>
            <parameter>
                <name>ResourceId</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>GetDrawableForDensity</name>
            <comment>Return a drawable object associated with the resource ID for the given screen density in DPI.</comment>
            <returntype>android.graphics.drawable.Drawable</returntype>
            <parameter>
                <name>ResourceId</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Density</name>
                <type>int</type>
            </parameter>
        </method>
        <property>
            <name>PackageName</name>
            <returntype>java.lang.String</returntype>
            <comment>Returns the application package name.</comment>
        </property>
        <field>
            <name>RESOURCE_SOURCE_APPLICATION</name>
            <comment>Constant field used to reference the application's resources.</comment>
            <returntype EnumType="true">uk.co.martinpearman.b4a.content.res.Resources.ResourceSource</returntype>
        </field>
        <field>
            <name>RESOURCE_SOURCE_SYSTEM</name>
            <comment>Constant field used to reference the system's resources.</comment>
            <returntype EnumType="true">uk.co.martinpearman.b4a.content.res.Resources.ResourceSource</returntype>
        </field>
    </class>
    <version>0.3</version>
    <comment>CWAC-Presentation enables you to handle external displays.
 When an external display is available the event ShowPresentation(Display1 As Display) is raised.
 The Display object can be used to initialize a Presentation object.
 The Presentation object is used to display a user interface on the external display.
 When an external display is no longer available the event ClearPresentation(ShowInline As Boolean) is raised.
 The Presentation object's Dismiss method should then be called.
 ShowInline indicates whether the Activity is still in the foregorund and therefore the user interface should now be displayed 'inline' on the device's primary display.
 This library is based on the open source CommonsWare PresentationHelper library: https://github.com/commonsguy/cwac-presentation
 The CommonsWare PresentationHelper library is licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License.
 You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and limitations under the License.</comment>
    <author>Martin Pearman</author>
</root>
