<?xml version="1.0" encoding="utf-8"?>
<root>
  <doclet-version-NOT-library-version>1.00</doclet-version-NOT-library-version>
  <dependsOn>reflection</dependsOn>
  <dependsOn>sql</dependsOn>
  <dependsOn>javaobject</dependsOn>
  <class>
    <name>b4a.example.suggestionsedittext</name>
    <shortname>SuggestionsEditText</shortname>
    <owner>activity</owner>
    <event>TextChanged (Old As String, New As String)</event>
    <event>EnterPressed ()</event>
    <event>FocusChanged (HasFocus As Boolean)</event>
    <event>AddAllAsyncComplete (Success As Boolean) ' AddAllAsync response</event>
    <designerProperty>Key: BackTextColor, DisplayName: Back Text Color, FieldType: Color, DefaultValue:0xFF808080</designerProperty>
    <designerProperty>Key: TextColor, DisplayName: Text Color, FieldType: Color, DefaultValue:Null</designerProperty>
    <designerProperty>Key: Color, DisplayName: Color, FieldType: Color, DefaultValue:Null</designerProperty>
    <designerProperty>Key: HintText, DisplayName: Hint text, FieldType: String, DefaultValue:""</designerProperty>
    <designerProperty>Key: KBSuggestions, DisplayName: Keyboard's suggestions On, FieldType: Boolean, DefaultValue: False, Description: if keyboard's suggestions will be shown</designerProperty>
    <method>
      <name>IsInitialized</name>
      <comment>Tests whether the object has been initialized.</comment>
      <returntype>boolean</returntype>
    </method>
    <method>
      <name DesignerName="Add">_add</name>
      <comment> Adds a word.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Word</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="AddAll">_addall</name>
      <comment> Adds a list of words. Will return True if successful.
 Example1:
 cvAutoCompleteEditText1.AddAll(Arry As String("One", "Two", "Three"))
 Example2:
 Dim lst As List
 lst.Initialize
 lst.Add("One")
 lst.Add("Two")
 lst.Add("Three")
 cvAutoCompleteEditText1.AddAll(lst)
</comment>
      <returntype>boolean</returntype>
      <parameter>
        <name>lstWords</name>
        <type>anywheresoftware.b4a.objects.collections.List</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="AddAllAsync">_addallasync</name>
      <comment> Same as AddAll but this uses ansync method
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>lstWords</name>
        <type>anywheresoftware.b4a.objects.collections.List</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="AddToParent">_addtoparent</name>
      <comment> Allows you to add this view by code.
 Parent must be an Activity or a Panel.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Parent</name>
        <type>anywheresoftware.b4a.objects.ConcreteViewWrapper</type>
      </parameter>
      <parameter>
        <name>Left</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Top</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Width</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Height</name>
        <type>int</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="Class_Globals">_class_globals</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="Contains">_contains</name>
      <comment> Checks if a word exists.
</comment>
      <returntype>boolean</returntype>
      <parameter>
        <name>Word</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="DeleteAllWordsDBs">_deleteallwordsdbs</name>
      <comment> Deletes all old unneded DB files used before.
 Use this method only once, BEFORE INITIALIZING
 THE DB (InitWordsDB method) of your first Custom View.
 Also, with this method you set the DB directory.
 -----
 Dir: Optional - the DB directory
 if you pass an empty string, File.DirInternal will be used.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Dir</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="DesignerCreateView">_designercreateview</name>
      <returntype>String</returntype>
      <parameter>
        <name>Base</name>
        <type>anywheresoftware.b4a.objects.PanelWrapper</type>
      </parameter>
      <parameter>
        <name>Lbl</name>
        <type>anywheresoftware.b4a.objects.LabelWrapper</type>
      </parameter>
      <parameter>
        <name>Props</name>
        <type>anywheresoftware.b4a.objects.collections.Map</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="GetBackgroundEditText">_getbackgroundedittext</name>
      <comment> This CV is made of two EditText:
 this property returns the one which is in Background.
</comment>
      <returntype>anywheresoftware.b4a.objects.EditTextWrapper</returntype>
    </method>
    <method>
      <name DesignerName="getBackTextColor" HideFromIDE="true">_getbacktextcolor</name>
      <returntype>int</returntype>
    </method>
    <method>
      <name DesignerName="GetBase">_getbase</name>
      <returntype>anywheresoftware.b4a.objects.PanelWrapper</returntype>
    </method>
    <method>
      <name DesignerName="getCaseSensitive" HideFromIDE="true">_getcasesensitive</name>
      <returntype>boolean</returntype>
    </method>
    <method>
      <name DesignerName="getColor" HideFromIDE="true">_getcolor</name>
      <returntype>int</returntype>
    </method>
    <method>
      <name DesignerName="getDB" HideFromIDE="true">_getdb</name>
      <comment> Gets the words DB
</comment>
      <returntype>anywheresoftware.b4a.sql.SQL</returntype>
    </method>
    <method>
      <name DesignerName="getDBDir" HideFromIDE="true">_getdbdir</name>
      <comment> Gets the DB's directory used by cvAutoCompleteEditText.
</comment>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="getDBFileName" HideFromIDE="true">_getdbfilename</name>
      <comment> Gets the DB's file name used by cvAutoCompleteEditText.
</comment>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="getForceDoneButton" HideFromIDE="true">_getforcedonebutton</name>
      <returntype>boolean</returntype>
    </method>
    <method>
      <name DesignerName="GetForegroundEditText">_getforegroundedittext</name>
      <comment> This CV is made of two EditText:
 this property returns the one which is in Foreground.
</comment>
      <returntype>anywheresoftware.b4a.objects.EditTextWrapper</returntype>
    </method>
    <method>
      <name DesignerName="getHintText" HideFromIDE="true">_gethinttext</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="getInDBOnly" HideFromIDE="true">_getindbonly</name>
      <comment> If True (default), only words found in the DB are allowed.
</comment>
      <returntype>boolean</returntype>
    </method>
    <method>
      <name DesignerName="getKBFullScreen" HideFromIDE="true">_getkbfullscreen</name>
      <returntype>boolean</returntype>
    </method>
    <method>
      <name DesignerName="getKBSuggestions" HideFromIDE="true">_getkbsuggestions</name>
      <returntype>boolean</returntype>
    </method>
    <method>
      <name DesignerName="getText" HideFromIDE="true">_gettext</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="getTextColor" HideFromIDE="true">_gettextcolor</name>
      <returntype>int</returntype>
    </method>
    <method>
      <name DesignerName="Initialize">_initialize</name>
      <returntype>String</returntype>
      <parameter>
        <name>ba</name>
        <type>anywheresoftware.b4a.BA</type>
      </parameter>
      <parameter>
        <name>vCallBack</name>
        <type>Object</type>
      </parameter>
      <parameter>
        <name>vEventName</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="InitWordsDB">_initwordsdb</name>
      <comment> Initializes the DB used to store the words.
 You must call it always, even if you have added
 this Custom View by Designer.
 Do not forget to call DeleteAllWordsDB, una tantum,
 BEFORE initializing your first Custom View.
</comment>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="InitWordsDB2">_initwordsdb2</name>
      <comment> Initializes the DB used to store the words.
 This SuggestionsEditText will use the same DB
 of SuggET, which must be already initialized.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>SuggET</name>
        <type>b4a.example.suggestionsedittext</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="RemoveAllWords">_removeallwords</name>
      <comment> Removes all words from DB.
</comment>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="RemoveWord">_removeword</name>
      <comment> Removes a word from DB.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Word</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setBackTextColor" HideFromIDE="true">_setbacktextcolor</name>
      <comment> Gets/Sets the "suggestion" color.
 It is Gray by default.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>BackTextColor</name>
        <type>int</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setCaseSensitive" HideFromIDE="true">_setcasesensitive</name>
      <comment> Sets/Gets the type of comparison of the text.
 It is False by default, then not case sensitive.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>CaseSensitive</name>
        <type>boolean</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setColor" HideFromIDE="true">_setcolor</name>
      <comment> Gets/Sets the background of the view to be a ColorDrawable with the given color.
 If the current background is of type GradientDrawable or ColorDrawable the round corners will be kept.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Color</name>
        <type>int</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setForceDoneButton" HideFromIDE="true">_setforcedonebutton</name>
      <comment> Forces the O.S. to display Done as Action Key in the virtual keyboard.
 It is False by default.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>ForceDone</name>
        <type>boolean</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setHintText" HideFromIDE="true">_sethinttext</name>
      <comment> Sets/Gets the classic hint of EditText
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Hint</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setInDBOnly" HideFromIDE="true">_setindbonly</name>
      <returntype>String</returntype>
      <parameter>
        <name>InDBOnly</name>
        <type>boolean</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setKBFullScreen" HideFromIDE="true">_setkbfullscreen</name>
      <comment> Gets/Sets full screen keyboard on/off
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>On</name>
        <type>boolean</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setKBSuggestions" HideFromIDE="true">_setkbsuggestions</name>
      <comment> Gets/Sets Keyboard's suggestions on/off
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>On</name>
        <type>boolean</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setText" HideFromIDE="true">_settext</name>
      <returntype>String</returntype>
      <parameter>
        <name>Txt</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setTextColor" HideFromIDE="true">_settextcolor</name>
      <returntype>String</returntype>
      <parameter>
        <name>TextColor</name>
        <type>int</type>
      </parameter>
    </method>
    <property>
      <name DesignerName="BackTextColor">_backtextcolor</name>
      <comment> Gets/Sets the "suggestion" color.
 It is Gray by default.
</comment>
      <returntype>int</returntype>
      <parameter>
        <name>Value</name>
        <type>int</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="CaseSensitive">_casesensitive</name>
      <comment> Sets/Gets the type of comparison of the text.
 It is False by default, then not case sensitive.
</comment>
      <returntype>boolean</returntype>
      <parameter>
        <name>Value</name>
        <type>boolean</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="Color">_color</name>
      <comment> Gets/Sets the background of the view to be a ColorDrawable with the given color.
 If the current background is of type GradientDrawable or ColorDrawable the round corners will be kept.
</comment>
      <returntype>int</returntype>
      <parameter>
        <name>Value</name>
        <type>int</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="DB">_db</name>
      <comment> Gets the words DB
</comment>
      <returntype>anywheresoftware.b4a.sql.SQL</returntype>
    </property>
    <property>
      <name DesignerName="DBDir">_dbdir</name>
      <comment> Gets the DB's directory used by cvAutoCompleteEditText.
</comment>
      <returntype>String</returntype>
    </property>
    <property>
      <name DesignerName="DBFileName">_dbfilename</name>
      <comment> Gets the DB's file name used by cvAutoCompleteEditText.
</comment>
      <returntype>String</returntype>
    </property>
    <property>
      <name DesignerName="ForceDoneButton">_forcedonebutton</name>
      <comment> Forces the O.S. to display Done as Action Key in the virtual keyboard.
 It is False by default.
</comment>
      <returntype>boolean</returntype>
      <parameter>
        <name>Value</name>
        <type>boolean</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="HintText">_hinttext</name>
      <comment> Sets/Gets the classic hint of EditText
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Value</name>
        <type>String</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="InDBOnly">_indbonly</name>
      <comment> If True (default), only words found in the DB are allowed.
</comment>
      <returntype>boolean</returntype>
      <parameter>
        <name>Value</name>
        <type>boolean</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="KBFullScreen">_kbfullscreen</name>
      <comment> Gets/Sets full screen keyboard on/off
</comment>
      <returntype>boolean</returntype>
      <parameter>
        <name>Value</name>
        <type>boolean</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="KBSuggestions">_kbsuggestions</name>
      <comment> Gets/Sets Keyboard's suggestions on/off
</comment>
      <returntype>boolean</returntype>
      <parameter>
        <name>Value</name>
        <type>boolean</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="Text">_text</name>
      <returntype>String</returntype>
      <parameter>
        <name>Value</name>
        <type>String</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="TextColor">_textcolor</name>
      <returntype>int</returntype>
      <parameter>
        <name>Value</name>
        <type>int</type>
      </parameter>
    </property>
  </class>
  <version>2</version>
  <author>LucaMs</author>
</root>