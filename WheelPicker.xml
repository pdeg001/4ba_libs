<?xml version="1.0" encoding="UTF-8"?>
<root>
    <doclet-version-NOT-library-version>1.04</doclet-version-NOT-library-version>
    <class>
        <name>wheelpickerwrapper.wheelpickerWrapper</name>
        <shortname>WheelPicker</shortname>
        <objectwrapper>com.aigestudio.wheelpicker.WheelPicker</objectwrapper>
        <owner>process</owner>
        <event>item_selected(position As Int)</event>
        <event>index_changed(currentposition As Int)</event>
        <method>
            <name>BringToFront</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>RequestFocus</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>RemoveView</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>onWheelSelected</name>
            <comment>&lt;p&gt;
 Invoke when WheelPicker scroll stopped
 This method will be called when WheelPicker stop and return current selected item data's
 position in list
position: &lt;p&gt;
                 Current selected item data's position in list</comment>
            <returntype>void</returntype>
            <parameter>
                <name>position</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>onWheelScrolled</name>
            <comment>&lt;p&gt;
 Invoke when WheelPicker scroll stopped
 WheelPicker will return a distance offset which between current scroll position and
 initial position, this offset is a positive or a negative, positive means WheelPicker is
 scrolling from bottom to top, negative means WheelPicker is scrolling from top to bottom
offset: &lt;p&gt;
               Distance offset which between current scroll position and initial position</comment>
            <returntype>void</returntype>
            <parameter>
                <name>offset</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>SetBackgroundImage</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.graphics.Bitmap</type>
            </parameter>
        </method>
        <method>
            <name>Invalidate3</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg3</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>onWheelScrollStateChanged</name>
            <comment>&lt;p&gt;
 Invoke when WheelPicker's scroll state changed
 The state of WheelPicker always between idle, dragging, and scrolling, this method will
 be called when they switch

              State of WheelPicker, only one of the following
              {@link WheelPicker#SCROLL_STATE_IDLE}
              Express WheelPicker in state of idle
              {@link WheelPicker#SCROLL_STATE_DRAGGING}
              Express WheelPicker in state of dragging
              {@link WheelPicker#SCROLL_STATE_SCROLLING}
              Express WheelPicker in state of scrolling</comment>
            <returntype>void</returntype>
            <parameter>
                <name>state</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>Invalidate2</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.graphics.Rect</type>
            </parameter>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>Initialize</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>EventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>onItemSelected</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>picker</name>
                <type>com.aigestudio.wheelpicker.WheelPicker</type>
            </parameter>
            <parameter>
                <name>data</name>
                <type>java.lang.Object</type>
            </parameter>
            <parameter>
                <name>position</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>Invalidate</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>SetLayout</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type Pixel="true">int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type Pixel="true">int</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type Pixel="true">int</type>
            </parameter>
            <parameter>
                <name>arg3</name>
                <type Pixel="true">int</type>
            </parameter>
        </method>
        <method>
            <name>DesignerCreateView</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>paramPanelWrapper</name>
                <type>anywheresoftware.b4a.objects.PanelWrapper</type>
            </parameter>
            <parameter>
                <name>paramLabelWrapper</name>
                <type>anywheresoftware.b4a.objects.LabelWrapper</type>
            </parameter>
            <parameter>
                <name>paramMap</name>
                <type>anywheresoftware.b4a.objects.collections.Map</type>
            </parameter>
        </method>
        <method>
            <name>SetColorAnimated</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>SetLayoutAnimated</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type Pixel="true">int</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type Pixel="true">int</type>
            </parameter>
            <parameter>
                <name>arg3</name>
                <type Pixel="true">int</type>
            </parameter>
            <parameter>
                <name>arg4</name>
                <type Pixel="true">int</type>
            </parameter>
        </method>
        <method>
            <name>SetVisibleAnimated</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>SendToBack</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <property>
            <name>Enabled</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>SelectedItemTextColor</name>
            <parameter>
                <name>color</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Visible</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>ItemTextSize</name>
            <parameter>
                <name>size</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Background</name>
            <returntype>android.graphics.drawable.Drawable</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.graphics.drawable.Drawable</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Data</name>
            <parameter>
                <name>data</name>
                <type>java.util.List</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>IndicatorSize</name>
            <parameter>
                <name>size</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Tag</name>
            <returntype>java.lang.Object</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.lang.Object</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>IndicatorColor</name>
            <parameter>
                <name>color</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Width</name>
            <returntype>int</returntype>
            <parameter>
                <name>Width</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Curved</name>
            <parameter>
                <name>isCurved</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>VisibleItemCount</name>
            <parameter>
                <name>count</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Cyclic</name>
            <parameter>
                <name>isCyclic</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Top</name>
            <returntype>int</returntype>
            <parameter>
                <name>paramInt</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Parent</name>
            <returntype>java.lang.Object</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Indicator</name>
            <parameter>
                <name>hasIndicator</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>SameWidth</name>
            <parameter>
                <name>hasSameWidth</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Curtain</name>
            <parameter>
                <name>hasCurtain</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Height</name>
            <returntype>int</returntype>
            <parameter>
                <name>height</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Left</name>
            <returntype>int</returntype>
            <parameter>
                <name>paramInt</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Color</name>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>ItemAlign</name>
            <parameter>
                <name>align</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>SelectedItemPosition</name>
            <parameter>
                <name>position</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Atmospheric</name>
            <parameter>
                <name>hasAtmospheric</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>ItemTextColor</name>
            <parameter>
                <name>color</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>CurtainColor</name>
            <parameter>
                <name>color</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <field>
            <name>ba</name>
            <comment></comment>
            <returntype>anywheresoftware.b4a.BA</returntype>
        </field>
    </class>
    <version>1.08</version>
    <author>Github: AigeStudio, Wrapped by: Johan Schoeman</author>
</root>
