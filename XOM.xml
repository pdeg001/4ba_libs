<?xml version="1.0" encoding="UTF-8"?>
<root>
    <doclet-version-NOT-library-version>1.04</doclet-version-NOT-library-version>
    <class>
        <name>uk.co.martinpearman.b4a.xom.XOMDocType</name>
        <shortname>XOMDocType</shortname>
        <objectwrapper>nu.xom.DocType</objectwrapper>
        <owner>process</owner>
        <method>
            <name>Initialize</name>
            <comment>Creates a new document type declaration with no public or system ID.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>RootElementName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>ToXML</name>
            <comment>Returns a string containing the actual XML form of the document type declaration represented by this object.</comment>
            <returntype>java.lang.String</returntype>
        </method>
        <method>
            <name>ToString</name>
            <comment>Returns a string form of the DocType suitable for debugging and diagnosis.</comment>
            <returntype>java.lang.String</returntype>
        </method>
        <method>
            <name>Initialize2</name>
            <comment>Creates a new document type declaration with a system ID but no public ID.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>RootElementName</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>SystemId</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>Initialize3</name>
            <comment>Creates a new document type declaration with a public ID and a system ID.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>RootElementName</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>SystemId</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>PublicId</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <property>
            <name>SystemID</name>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>SystemId</name>
                <type>java.lang.String</type>
            </parameter>
            <comment>Get or Set the system ID for the external DTD subset.</comment>
        </property>
        <property>
            <name>RootElementName</name>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>Name</name>
                <type>java.lang.String</type>
            </parameter>
            <comment>Get or Set the name the document type declaration specifies for the root element.</comment>
        </property>
        <property>
            <name>InternalDTDSubset</name>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>InternalDTDSubset</name>
                <type>java.lang.String</type>
            </parameter>
            <comment>Get or Set the internal DTD subset; that is the part of the DTD between [ and ].</comment>
        </property>
        <property>
            <name>PublicID</name>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>PublicId</name>
                <type>java.lang.String</type>
            </parameter>
            <comment>Get or Set the public ID for the external DTD subset.</comment>
        </property>
    </class>
    <class>
        <name>uk.co.martinpearman.b4a.xom.XOMText</name>
        <shortname>XOMText</shortname>
        <objectwrapper>nu.xom.Text</objectwrapper>
        <owner>process</owner>
        <method>
            <name>Initialize</name>
            <comment>Creates a new Text object with the value of Data.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Data</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>GetChild</name>
            <comment></comment>
            <returntype>uk.co.martinpearman.b4a.xom.XOMNode</returntype>
            <parameter>
                <name>Index</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>ToXML</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </method>
        <method>
            <name>ToString</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>Copy</name>
            <comment></comment>
            <returntype>uk.co.martinpearman.b4a.xom.XOMNode</returntype>
        </method>
        <property>
            <name>Value</name>
            <returntype>java.lang.String</returntype>
            <comment>Returns the XPath 1.0 string-value of this Text node.</comment>
        </property>
        <property>
            <name>ChildCount</name>
            <returntype>int</returntype>
            <comment></comment>
        </property>
    </class>
    <class>
        <name>uk.co.martinpearman.b4a.xom.XOMNodes</name>
        <shortname>XOMNodes</shortname>
        <objectwrapper>nu.xom.Nodes</objectwrapper>
        <owner>process</owner>
        <method>
            <name>Initialize</name>
            <comment>Creates an empty node list.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>ContainsNode</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>Node1</name>
                <type>nu.xom.Node</type>
            </parameter>
        </method>
        <method>
            <name>InsertNode</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>Node1</name>
                <type>nu.xom.Node</type>
            </parameter>
            <parameter>
                <name>Index</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>GetNode</name>
            <comment></comment>
            <returntype>uk.co.martinpearman.b4a.xom.XOMNode</returntype>
            <parameter>
                <name>Index</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>RemoveNode</name>
            <comment></comment>
            <returntype>uk.co.martinpearman.b4a.xom.XOMNode</returntype>
            <parameter>
                <name>Index</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>AppendNode</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>Node1</name>
                <type>nu.xom.Node</type>
            </parameter>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>Size</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
    </class>
    <class>
        <name>uk.co.martinpearman.b4a.xom.XOMBuilder</name>
        <shortname>XOMBuilder</shortname>
        <objectwrapper>nu.xom.Builder</objectwrapper>
        <owner>process</owner>
        <event>BuildDone(XOMDocument1 As XOMDocument, Tag As Object)</event>
        <method>
            <name>Initialize</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>EventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>BuildFromString</name>
            <comment>Build an XOMDocument from the XmlString.
Tag - Pass any Object as the Tag and when the method has completed, the Tag Object is returned in the BuildDone event.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>pBA</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>XmlString</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>BaseUri</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>Tag</name>
                <type>java.lang.Object</type>
            </parameter>
        </method>
        <method>
            <name>BuildFromInputStream</name>
            <comment>Build an XOMDocument from InputStream1.
Tag - Pass any Object as the Tag and when the method has completed, the Tag Object is returned in the BuildDone event.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>pBA</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>InputStream1</name>
                <type>java.io.InputStream</type>
            </parameter>
            <parameter>
                <name>BaseUri</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>AutoCloseStream</name>
                <type>boolean</type>
            </parameter>
            <parameter>
                <name>Tag</name>
                <type>java.lang.Object</type>
            </parameter>
        </method>
        <method>
            <name>BuildFromURL</name>
            <comment>Build an XOMDocument from the document specified by Url.
Tag - Pass any Object as the Tag and when the method has completed, the Tag Object is returned in the BuildDone event.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>pBA</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>Url</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>Tag</name>
                <type>java.lang.Object</type>
            </parameter>
        </method>
        <method>
            <name>BuildFromFile</name>
            <comment>Build an XOMDocument from the file specified by FilePath.
Tag - Pass any Object as the Tag and when the method has completed, the Tag Object is returned in the BuildDone event.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>pBA</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>FilePath</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>Tag</name>
                <type>java.lang.Object</type>
            </parameter>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
    </class>
    <class>
        <name>uk.co.martinpearman.b4a.xom.XOMComment</name>
        <shortname>XOMComment</shortname>
        <objectwrapper>nu.xom.Comment</objectwrapper>
        <owner>process</owner>
        <method>
            <name>Initialize</name>
            <comment>Creates a new comment node from string data.
 A comment node cannot have any child nodes.
 It can be a child of an Element or a Document.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Data</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>ToXML</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </method>
        <method>
            <name>ToString</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>Copy</name>
            <comment></comment>
            <returntype>uk.co.martinpearman.b4a.xom.XOMNode</returntype>
        </method>
        <property>
            <name>Value</name>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>Value</name>
                <type>java.lang.String</type>
            </parameter>
            <comment>Get or Set the content of this comment.</comment>
        </property>
    </class>
    <class>
        <name>uk.co.martinpearman.b4a.xom.XOMElement</name>
        <shortname>XOMElement</shortname>
        <objectwrapper>nu.xom.Element</objectwrapper>
        <owner>process</owner>
        <method>
            <name>RemoveNamespaceDeclaration</name>
            <comment>Removes the mapping of the specified prefix.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Prefix</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>ToXML</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </method>
        <method>
            <name>AddNamespaceDeclaration</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>Prefix</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>Uri</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>RemoveAttribute</name>
            <comment></comment>
            <returntype>uk.co.martinpearman.b4a.xom.XOMAttribute</returntype>
            <parameter>
                <name>Attribute1</name>
                <type>nu.xom.Attribute</type>
            </parameter>
        </method>
        <method>
            <name>SetNamespaceURI</name>
            <comment>Sets the namespace URI of this element.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>NamespaceURI</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>GetAttributeByNameAndNamespace</name>
            <comment></comment>
            <returntype>uk.co.martinpearman.b4a.xom.XOMAttribute</returntype>
            <parameter>
                <name>Name</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>Namespace</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>GetAttributeByName</name>
            <comment></comment>
            <returntype>uk.co.martinpearman.b4a.xom.XOMAttribute</returntype>
            <parameter>
                <name>Name</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>GetChildElementsByName</name>
            <comment></comment>
            <returntype>uk.co.martinpearman.b4a.xom.XOMElements</returntype>
            <parameter>
                <name>Name</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>Copy</name>
            <comment></comment>
            <returntype>uk.co.martinpearman.b4a.xom.XOMNode</returntype>
        </method>
        <method>
            <name>GetChildElementsByNameAndNamespace</name>
            <comment></comment>
            <returntype>uk.co.martinpearman.b4a.xom.XOMElements</returntype>
            <parameter>
                <name>Name</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>Namespace</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>SetNamespacePrefix</name>
            <comment>Sets the namespace prefix of this element.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>NamespacePrefix</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>GetNamespacePrefix</name>
            <comment>Returns the prefix of this element, or the empty string if this element does not have a prefix.</comment>
            <returntype>java.lang.String</returntype>
        </method>
        <method>
            <name>ToString</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </method>
        <method>
            <name>GetFirstChildElementByName</name>
            <comment></comment>
            <returntype>uk.co.martinpearman.b4a.xom.XOMElement</returntype>
            <parameter>
                <name>Name</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>Initialize2</name>
            <comment>Creates a new element in a namespace.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Name</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>Uri</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>GetFirstChildElementByNameAndNamespace</name>
            <comment></comment>
            <returntype>uk.co.martinpearman.b4a.xom.XOMElement</returntype>
            <parameter>
                <name>Name</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>Namespace</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>Initialize3</name>
            <comment>Creates a new element which is a deep copy of Element1.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Element1</name>
                <type>nu.xom.Element</type>
            </parameter>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>GetNamespacePrefix2</name>
            <comment>Returns the index'th namespace prefix declared on this element.</comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>Index</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>GetAttributeValueByName</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>Name</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>Initialize</name>
            <comment>Creates a new element in no namespace.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Name</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>GetAttributeValueByNameAndNamespace</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>Name</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>Namespace</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>InsertChild</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>Text</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>Index</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>AddAttribute</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>Attribute1</name>
                <type>nu.xom.Attribute</type>
            </parameter>
        </method>
        <method>
            <name>RemoveChildren</name>
            <comment></comment>
            <returntype>uk.co.martinpearman.b4a.xom.XOMNodes</returntype>
        </method>
        <method>
            <name>GetAttributeByIndex</name>
            <comment></comment>
            <returntype>uk.co.martinpearman.b4a.xom.XOMAttribute</returntype>
            <parameter>
                <name>Index</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>GetChildElements</name>
            <comment></comment>
            <returntype>uk.co.martinpearman.b4a.xom.XOMElements</returntype>
        </method>
        <method>
            <name>AppendChild</name>
            <comment>Converts a string to a text node and appends that node to the children of this node.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Text</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>GetNamespaceURI</name>
            <comment>Returns the namespace URI of this element, or the empty string if this element is not in a namespace.</comment>
            <returntype>java.lang.String</returntype>
        </method>
        <property>
            <name>NamespaceDeclarationCount</name>
            <returntype>int</returntype>
            <comment>Get the number of namespace declarations on this element.</comment>
        </property>
        <property>
            <name>BaseURI</name>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>Uri</name>
                <type>java.lang.String</type>
            </parameter>
            <comment>Get or Set the URI from which this element was loaded, and against which relative URLs in this element will be resolved, unless an xml:base attribute overrides this.</comment>
        </property>
        <property>
            <name>Value</name>
            <returntype>java.lang.String</returntype>
            <comment></comment>
        </property>
        <property>
            <name>QualifiedName</name>
            <returntype>java.lang.String</returntype>
            <comment>Get the complete name of this element, including the namespace prefix if this element has one.</comment>
        </property>
        <property>
            <name>AttributeCount</name>
            <returntype>int</returntype>
            <comment></comment>
        </property>
        <property>
            <name>LocalName</name>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>Name</name>
                <type>java.lang.String</type>
            </parameter>
            <comment>Get or Set the local name of this element, not including the namespace prefix or colon.</comment>
        </property>
    </class>
    <class>
        <name>uk.co.martinpearman.b4a.xom.XOMDocument</name>
        <shortname>XOMDocument</shortname>
        <objectwrapper>nu.xom.Document</objectwrapper>
        <owner>process</owner>
        <method>
            <name>RemoveChild</name>
            <comment></comment>
            <returntype>uk.co.martinpearman.b4a.xom.XOMNode</returntype>
            <parameter>
                <name>Position</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>Initialize</name>
            <comment>Creates a new Document object with the specified root element.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>RootElement</name>
                <type>nu.xom.Element</type>
            </parameter>
        </method>
        <method>
            <name>ToXML</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </method>
        <method>
            <name>ReplaceChild</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>OldChild</name>
                <type>nu.xom.Node</type>
            </parameter>
            <parameter>
                <name>NewChild</name>
                <type>nu.xom.Node</type>
            </parameter>
        </method>
        <method>
            <name>ToString</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </method>
        <method>
            <name>RemoveChild2</name>
            <comment></comment>
            <returntype>uk.co.martinpearman.b4a.xom.XOMNode</returntype>
            <parameter>
                <name>Node1</name>
                <type>nu.xom.Node</type>
            </parameter>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>Copy</name>
            <comment></comment>
            <returntype>uk.co.martinpearman.b4a.xom.XOMNode</returntype>
        </method>
        <property>
            <name>DocType</name>
            <returntype>uk.co.martinpearman.b4a.xom.XOMDocType</returntype>
            <parameter>
                <name>DocType1</name>
                <type>nu.xom.DocType</type>
            </parameter>
            <comment>Get or Set this document's document type declaration.</comment>
        </property>
        <property>
            <name>BaseURI</name>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>URI</name>
                <type>java.lang.String</type>
            </parameter>
            <comment>Get or Set the URI from which this document was loaded, and against which relative URLs in this document will be resolved.</comment>
        </property>
        <property>
            <name>Value</name>
            <returntype>java.lang.String</returntype>
            <comment>Returns the value of the document as defined by XPath 1.0.</comment>
        </property>
        <property>
            <name>RootElement</name>
            <returntype>uk.co.martinpearman.b4a.xom.XOMElement</returntype>
            <parameter>
                <name>Element1</name>
                <type>nu.xom.Element</type>
            </parameter>
            <comment>Get or Set the document's current root element.</comment>
        </property>
    </class>
    <class>
        <name>uk.co.martinpearman.b4a.xom.XOMProcessingInstruction</name>
        <shortname>XOMProcessingInstruction</shortname>
        <objectwrapper>nu.xom.ProcessingInstruction</objectwrapper>
        <owner>process</owner>
        <method>
            <name>ToXML</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </method>
        <method>
            <name>ToString</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>Copy</name>
            <comment></comment>
            <returntype>uk.co.martinpearman.b4a.xom.XOMNode</returntype>
        </method>
        <property>
            <name>Value</name>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>Value</name>
                <type>java.lang.String</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Target</name>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>Target</name>
                <type>java.lang.String</type>
            </parameter>
            <comment></comment>
        </property>
    </class>
    <class>
        <name>uk.co.martinpearman.b4a.xom.XOMParentNode</name>
        <shortname>XOMParentNode</shortname>
        <objectwrapper>nu.xom.ParentNode</objectwrapper>
        <owner>process</owner>
        <method>
            <name>InsertChild</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>Node1</name>
                <type>nu.xom.Node</type>
            </parameter>
            <parameter>
                <name>Index</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>ReplaceChild</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>OldChild</name>
                <type>nu.xom.Node</type>
            </parameter>
            <parameter>
                <name>NewChild</name>
                <type>nu.xom.Node</type>
            </parameter>
        </method>
        <method>
            <name>GetChildCount</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>IndexOf</name>
            <comment></comment>
            <returntype>int</returntype>
            <parameter>
                <name>Node1</name>
                <type>nu.xom.Node</type>
            </parameter>
        </method>
        <method>
            <name>SetBaseURI</name>
            <comment>Sets the URI against which relative URIs in this node will be resolved.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Uri</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>GetChild</name>
            <comment></comment>
            <returntype>uk.co.martinpearman.b4a.xom.XOMNode</returntype>
            <parameter>
                <name>index</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>RemoveChild</name>
            <comment></comment>
            <returntype>uk.co.martinpearman.b4a.xom.XOMNode</returntype>
            <parameter>
                <name>Index</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>AppendChild</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>Node1</name>
                <type>nu.xom.Node</type>
            </parameter>
        </method>
        <method>
            <name>RemoveChild2</name>
            <comment></comment>
            <returntype>uk.co.martinpearman.b4a.xom.XOMNode</returntype>
            <parameter>
                <name>Node1</name>
                <type>nu.xom.Node</type>
            </parameter>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
    </class>
    <class>
        <name>uk.co.martinpearman.b4a.xom.XOMNamespace</name>
        <shortname>XOMNamespace</shortname>
        <objectwrapper>nu.xom.Namespace</objectwrapper>
        <owner>process</owner>
        <method>
            <name>GetChild</name>
            <comment></comment>
            <returntype>uk.co.martinpearman.b4a.xom.XOMNode</returntype>
            <parameter>
                <name>Index</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>ToXML</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </method>
        <method>
            <name>Detach</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>ToString</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>Copy</name>
            <comment></comment>
            <returntype>uk.co.martinpearman.b4a.xom.XOMNode</returntype>
        </method>
        <property>
            <name>Value</name>
            <returntype>java.lang.String</returntype>
            <comment></comment>
        </property>
        <property>
            <name>ChildCount</name>
            <returntype>int</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Prefix</name>
            <returntype>java.lang.String</returntype>
            <comment></comment>
        </property>
    </class>
    <class>
        <name>uk.co.martinpearman.b4a.xom.XOMAttribute</name>
        <shortname>XOMAttribute</shortname>
        <objectwrapper>nu.xom.Attribute</objectwrapper>
        <owner>process</owner>
        <method>
            <name>Initialize</name>
            <comment>Creates a new attribute in no namespace with the specified name and value and undeclared type.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>LocalName</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>Value</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>ToXML</name>
            <comment>Returns a string representation of the attribute that is a well-formed XML attribute.</comment>
            <returntype>java.lang.String</returntype>
        </method>
        <method>
            <name>Copy</name>
            <comment>Creates a deep copy of this attribute that is not attached to an element.</comment>
            <returntype>uk.co.martinpearman.b4a.xom.XOMNode</returntype>
        </method>
        <method>
            <name>SetNamespace</name>
            <comment>Set the attribute's namespace prefix and URI.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Prefix</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>URI</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>ToString</name>
            <comment>Returns a string representation of the attribute suitable for debugging and diagnosis.</comment>
            <returntype>java.lang.String</returntype>
        </method>
        <method>
            <name>Initialize4</name>
            <comment>Creates a new attribute in the specified namespace with the specified name, value, and type.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>LocalName</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>Uri</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>Value</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>AttributeType1</name>
                <type>nu.xom.Attribute.Type</type>
            </parameter>
        </method>
        <method>
            <name>Initialize5</name>
            <comment>Creates a new attribute which is a deep copy of Attribute1.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Attribute1</name>
                <type>nu.xom.Attribute</type>
            </parameter>
        </method>
        <method>
            <name>Initialize2</name>
            <comment>Creates a new attribute in no namespace with the specified name, value, and type.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>LocalName</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>Value</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>AttributeType1</name>
                <type>nu.xom.Attribute.Type</type>
            </parameter>
        </method>
        <method>
            <name>Initialize3</name>
            <comment>Creates a new attribute in the specified namespace with the specified name and value and undeclared type.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>LocalName</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>Uri</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>Value</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <property>
            <name>Value</name>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>Value</name>
                <type>java.lang.String</type>
            </parameter>
            <comment>Get or Set the attribute value.</comment>
        </property>
        <property>
            <name>QualifiedName</name>
            <returntype>java.lang.String</returntype>
            <comment>Get the qualified name of this attribute, including the prefix if this attribute is in a namespace.</comment>
        </property>
        <property>
            <name>Type</name>
            <returntype>nu.xom.Attribute.Type</returntype>
            <parameter>
                <name>AttributeType1</name>
                <type>nu.xom.Attribute.Type</type>
            </parameter>
            <comment>Get or Set the DTD type of this attribute.</comment>
        </property>
        <property>
            <name>NameSpacePrefix</name>
            <returntype>java.lang.String</returntype>
            <comment>Get the prefix of this attribute, or the empty string if this attribute is not in a namespace.</comment>
        </property>
        <property>
            <name>NamespaceURI</name>
            <returntype>java.lang.String</returntype>
            <comment>Get the namespace URI of this attribute, or the empty string if this attribute is not in a namespace.</comment>
        </property>
        <property>
            <name>LocalName</name>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>Name</name>
                <type>java.lang.String</type>
            </parameter>
            <comment>Get or Set the local name of this attribute, not including the prefix.</comment>
        </property>
        <field>
            <name>ATTRIBUTE_TYPE_NOTATION</name>
            <comment></comment>
            <returntype>nu.xom.Attribute.Type</returntype>
        </field>
        <field>
            <name>ATTRIBUTE_TYPE_IDREF</name>
            <comment></comment>
            <returntype>nu.xom.Attribute.Type</returntype>
        </field>
        <field>
            <name>ATTRIBUTE_TYPE_NMTOKEN</name>
            <comment></comment>
            <returntype>nu.xom.Attribute.Type</returntype>
        </field>
        <field>
            <name>ATTRIBUTE_TYPE_ENUMERATION</name>
            <comment></comment>
            <returntype>nu.xom.Attribute.Type</returntype>
        </field>
        <field>
            <name>ATTRIBUTE_TYPE_ENTITIES</name>
            <comment></comment>
            <returntype>nu.xom.Attribute.Type</returntype>
        </field>
        <field>
            <name>ATTRIBUTE_TYPE_NMTOKENS</name>
            <comment></comment>
            <returntype>nu.xom.Attribute.Type</returntype>
        </field>
        <field>
            <name>ATTRIBUTE_TYPE_UNDECLARED</name>
            <comment></comment>
            <returntype>nu.xom.Attribute.Type</returntype>
        </field>
        <field>
            <name>ATTRIBUTE_TYPE_IDREFS</name>
            <comment></comment>
            <returntype>nu.xom.Attribute.Type</returntype>
        </field>
        <field>
            <name>ATTRIBUTE_TYPE_ENTITY</name>
            <comment></comment>
            <returntype>nu.xom.Attribute.Type</returntype>
        </field>
        <field>
            <name>ATTRIBUTE_TYPE_ID</name>
            <comment></comment>
            <returntype>nu.xom.Attribute.Type</returntype>
        </field>
        <field>
            <name>ATTRIBUTE_TYPE_CDATA</name>
            <comment></comment>
            <returntype>nu.xom.Attribute.Type</returntype>
        </field>
    </class>
    <class>
        <name>uk.co.martinpearman.b4a.xom.XOMSerializer</name>
        <shortname>XOMSerializer</shortname>
        <objectwrapper>nu.xom.Serializer</objectwrapper>
        <owner>process</owner>
        <method>
            <name>Initialize</name>
            <comment>Create a new serializer that uses the UTF-8 encoding.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>OutputStream1</name>
                <type>java.io.OutputStream</type>
            </parameter>
        </method>
        <method>
            <name>Flush</name>
            <comment>Flushes the data onto the output stream.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>Write</name>
            <comment>Serializes Document1 onto the output stream using the current options.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Document1</name>
                <type>nu.xom.Document</type>
            </parameter>
        </method>
        <method>
            <name>SetOutputStream</name>
            <comment>Flushes the previous output stream and redirects further output to the new output stream.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>OutputStream1</name>
                <type>java.io.OutputStream</type>
            </parameter>
        </method>
        <method>
            <name>Initialize2</name>
            <comment>Create a new serializer that uses the specified encoding.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>OutputStream1</name>
                <type>java.io.OutputStream</type>
            </parameter>
            <parameter>
                <name>Encoding</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <property>
            <name>MaxLength</name>
            <returntype>int</returntype>
            <parameter>
                <name>MaxLength</name>
                <type>int</type>
            </parameter>
            <comment>Get or Set the preferred maximum line length.</comment>
        </property>
        <property>
            <name>PreserveBaseURI</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>PreserveBaseURI</name>
                <type>boolean</type>
            </parameter>
            <comment>Get or Set whether this serializer inserts extra xml:base attributes to attempt to preserve base URI information from the document.</comment>
        </property>
        <property>
            <name>Encoding</name>
            <returntype>java.lang.String</returntype>
            <comment>Get the name of the character encoding used by this serializer.</comment>
        </property>
        <property>
            <name>UnicodeNormalizationFormC</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>UnicodeNormalizationFormC</name>
                <type>boolean</type>
            </parameter>
            <comment>Get or Set whether serialization will perform Unicode normalization on all data using normalization form C (NFC).</comment>
        </property>
        <property>
            <name>LineSeparator</name>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>LineSeparator</name>
                <type>java.lang.String</type>
            </parameter>
            <comment>Get or Set the string used as a line separator.</comment>
        </property>
        <property>
            <name>Indent</name>
            <returntype>int</returntype>
            <parameter>
                <name>Indent</name>
                <type>int</type>
            </parameter>
            <comment>Get or Set the number of spaces this serializer indents.</comment>
        </property>
    </class>
    <class>
        <name>uk.co.martinpearman.b4a.xom.XOMElements</name>
        <shortname>XOMElements</shortname>
        <objectwrapper>nu.xom.Elements</objectwrapper>
        <owner>process</owner>
        <method>
            <name>GetElement</name>
            <comment></comment>
            <returntype>uk.co.martinpearman.b4a.xom.XOMElement</returntype>
            <parameter>
                <name>Index</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>Size</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
    </class>
    <class>
        <name>uk.co.martinpearman.b4a.xom.XOMNode</name>
        <shortname>XOMNode</shortname>
        <objectwrapper>nu.xom.Node</objectwrapper>
        <owner>process</owner>
        <method>
            <name>GetChild</name>
            <comment></comment>
            <returntype>uk.co.martinpearman.b4a.xom.XOMNode</returntype>
            <parameter>
                <name>Index</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>ToXML</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </method>
        <method>
            <name>HashCode</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>Detach</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>Query</name>
            <comment>Returns the nodes selected by the XPath expression in the context of this node in document order as defined by XSLT.</comment>
            <returntype>uk.co.martinpearman.b4a.xom.XOMNodes</returntype>
            <parameter>
                <name>XPath</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>Copy</name>
            <comment></comment>
            <returntype>uk.co.martinpearman.b4a.xom.XOMNode</returntype>
        </method>
        <property>
            <name>Parent</name>
            <returntype>uk.co.martinpearman.b4a.xom.XOMParentNode</returntype>
            <comment></comment>
        </property>
        <property>
            <name>BaseURI</name>
            <returntype>java.lang.String</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Value</name>
            <returntype>java.lang.String</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Document</name>
            <returntype>uk.co.martinpearman.b4a.xom.XOMDocument</returntype>
            <comment></comment>
        </property>
        <property>
            <name>ChildCount</name>
            <returntype>int</returntype>
            <comment></comment>
        </property>
    </class>
    <version>1.2</version>
    <comment>The B4A XOM library is a partial implementation of the java XOM library by Elliotte Rusty Harold.
The java XOM library is licensed under the terms and conditions of the LGPL, http://www.gnu.org/licenses/lgpl.html
More info can be found here: http://www.xom.nu/</comment>
    <author>Martin Pearman</author>
    <dependsOn>xom-1.2.10</dependsOn>
    <dependsOn>dtd-xercesImpl</dependsOn>
</root>
